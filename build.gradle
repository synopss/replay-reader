import org.panteleyev.jpackage.ImageType
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.panteleyev.jpackageplugin' version '1.6.1'
}

group = 'com.synops'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

javafx {
    version = '24.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

wrapper {
    gradleVersion = '8.14'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation('org.springframework.boot:spring-boot-starter-webflux') {
        exclude group: 'io.netty', module: 'netty-transport-native-epoll'
    }
    implementation 'commons-io:commons-io:2.19.0'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'com.google.guava:guava:33.4.8-jre'
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    implementation platform('org.kordamp.ikonli:ikonli-bom:12.4.0')
    implementation 'org.kordamp.ikonli:ikonli-fluentui-pack:12.4.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

bootJar {
    manifest {
        attributes 'Implementation-Version': "${project.version}"
        attributes 'Implementation-Title': "${project.name}"
    }
}

tasks.register('deleteLibs', Delete) {
    delete "${base.libsDirectory.get()}"
}

tasks.register('cleanJpackageWorkdir', Delete) {
    delete layout.buildDirectory.file('jpackage')
}

tasks.register('copyInstaller', Copy) {
    from file("${rootDir}/installer")
    into file("${base.libsDirectory.get()}")
    doNotTrackState('Copying installation file need to re-run every time')
}

jpackage {
    dependsOn deleteLibs, cleanJpackageWorkdir, bootJar, copyInstaller
    mustRunAfter deleteLibs
    appName = project.name
    appVersion = "${project.version}".split("-")[0]
    vendor = 'Synops'
    copyright = 'Copyright 2025 by Synops. All Rights Reserved'
    appDescription = project.name
    input = "${base.libsDirectory.get()}"
    destination = "${base.distsDirectory.get()}"
    mainJar = tasks.named('bootJar').get().outputs.files.singleFile.name
    licenseFile = "${rootDir}/LICENSE"
    javaOptions = ['-Dfile.encoding=UTF-8',
                   '-Dlogging.file.name=replay-reader.log',
                   '-Dlogging.logback.rollingpolicy.clean-history-on-start=true',
                   '-Dlogging.logback.rollingpolicy.max-file-size=20MB',
                   '-Dlogging.logback.rollingpolicy.max-history=3']
    windows {
        type = ImageType.MSI
        winMenu = true
        winPerUserInstall = true
        winDirChooser = true
        winMenuGroup = project.name
        winUpgradeUuid = 'b4aec7f1-a266-43b6-b277-629105fde288'
        icon = "${rootDir}/icon.ico"
    }
}
